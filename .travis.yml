language: python
sudo: false
# Credit: Original .travis.yml lifted from PyQtGraph lifted from VisPy

# Here we use anaconda for 2.6 and 3.3, since it provides the simplest
# interface for running different versions of Python. We could also use
# it for 2.7, but the Ubuntu system has installable 2.7 Qt4-GL, which
# allows for more complete testing.
notifications:
  email: false

cache:
  directories:
    - $HOME/mc

env:
  - PYTHON=3.7 QT=pyqt5 TEST=standard

services:
    - xvfb

before_install:
  - wget http://repo.continuum.io/miniconda/Miniconda3-3.7.3-Linux-x86_64.sh -O miniconda.sh;
  - chmod +x miniconda.sh
  - ./miniconda.sh -b -p ~/anaconda
  - export PATH=~/anaconda/bin:$PATH

install:
  - export GIT_FULL_HASH=`git rev-parse HEAD`
  - conda update conda --yes
  - conda env create -f environment.yml
  - source activate stytra_env
  - echo ${QT}
  - echo ${TEST}
  - echo ${PYTHON}
  - hash -r

  - which python
  - python --version
  - pwd
  - ls
  - pip install pytest-xdist # multi-thread py.test
  - pip install -U tox-travis
  # add coverage stats
  - pip install .

before_script:
  # We need to create a (fake) display on Travis, let's use a funny resolution
  - export DISPLAY=:99.0
  - /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render

script:
 - tox

after_success:
  - pip install coveralls --upgrade  # add another coverage integration service
  - coveralls

  - pip install Sphinx==3.0.3
  - pip install sphinx_rtd_theme==0.4.3
  - pip install sphinxcontrib-bibtex
  - cd docs
  - sphinx-apidoc ../stytra -o ./build/doctrees
  - make html
  - cd ..


deploy:
  - provider: pypi
    skip_cleanup: true
    distributions: sdist bdist_wheel
    user: __token__
    password:
      secure: AaZo11Z3qFgw/4ITrL8PS49MoT6rTbGBkaJfsYjQDSeHCOyOpHdgsa1IQjNRzCs9cnMIJrS1ZQcS/aCUjnxHeH6r5FLqivRV4Mdw1sxaXWJHBa7juDsg84yShslJUH7uzL+XWza+lrYSfItIQeS3TC2fdJngHCbXLT06/PnJLEtNYw3GAPwHhjQm+A7CXfNimGH9pTQZ2CJ4QtSDIWbyvYFwbkOJRTQzRbK3xewaekJZOddeYg3Jpqd7BX/nTGri8R8YZ6j5GJ9bLDDfH8IYfM32g4dhALpihwIlcMpAPVH34CxTb8LNUvYdVCKM5OIc7P7CGRsi8aTzrtmCrqWABAIqUglyQu6FIr9jFqoVklKW2dMoIVdfkK1NKq/pCJIyS6mfVsLHWUCERvHoa9v1HB2473KHCeofxj9LDfown6KBwhIDkowrbVcsCwTjhK5h+C1qm96LuxHmqG6/JXadsxhy+W/37LnlWN3YJ8LZ04uYBFv9MeTgt27b/9lOcFn2yJgBewlNkg9XtaQM440WiXy3P2heqr6j4EUuKVge7tRHoE9ALDzuFDYZFX8rYaqBUHa54gRLY8BltGQJB7jxrB+gVdK31Jxw579kZCMV0WD84XctOmutRSfcxvRm6zBZ3ZryWm30CQyObIc5TlEmbt/ot5vt4csz46VrhlOTu0Q=
    on:
      branch: master
      python: 3.8
    skip_existing: true