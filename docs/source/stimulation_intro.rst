Stimulation
===========

One of the main purposes of stytra is to provide a framework to design and
run sequences of stimuli to be presented to the fish.

Stimuli and Protocols in stytra
-------------------------------
The :class:`~stytra.stimulation.stimuli.generic_stimuli.Stimulus` class constitutes
the building block for an experiment in stytra.
A sequence of Stimuli is bundled together and parameterized by the
:class:`~stytra.stimulation.Protocol` class.
See :ref:`protocol-definition`.
for a description of how to create a protocol in stytra.

The :class:`~stytra.stimulation.ProtocolRunner`  class is used to
keep track of time and advance the Stimuli in the Protocol sequence with the proper pace.


.. autoclass::`~stytra.stimulation.ProtocolRunner`

A large number of stimuli is included in the package. In particular, a library of visual stimuli has been implemented as :class:`~stytra.stimulation.stimuli.visual.VisualStimulus` objects using the `QPainter <https://doc.qt.io/qt-5/qpainter.html>`_ object, a part of the Qt GUI library, enabling efficient drawing with OpenGL. Relying on a set of high-level drawing primitives makes the code very readable and maintainable. Stytra already includes common stimuli used in  visual neuroscience, such as moving bars, dots, whole-field translation or rotations of patterns on a screen, and additional features such as movie playback and the presentation of images from a file (which can be generated by packages such as Imagen :cite:`imagen`). The classes describing visual stimuli can be combined, and new stimuli where these patterns are moved or masked can be quickly defined by combining the appropriate :class:`~stytra.stimulation.stimuli.generic_stimuli.Stimulus` types. Finally, new stimuli can be easily created by redefining the :meth:`~stytra.stimulation.stimuli.visual.VisualStimulus.paint` method in a new :class:`~stytra.stimulation.stimuli.visual.VisualStimulus` object. Multiple stimuli can be presented simultaneously using :class:`~stytra.stimulation.stimuli.visual.SimulusCombiner`. Presenting different stimuli depending on animal behavior or external signals can be achieved using the :class:`~stytra.stimulation.stimuli.conditional.ConditionalWrapper` container, or with similarly designed custom objects. Visual stimuli are usually displayed on a secondary screen, therefore Stytra provides a convenient interface for positioning and calibrating the stimulation window (visible in :ref:`interface` on the right-hand side). Although in our experiments we are using a single stimulation monitor, displaying stimuli on multiple screens can be achieved with virtual desktop technology or screen-splitting hardware boards. Importantly, all stimulus parameters are specified in physical units and are therefore independent of the display hardware. Finally, the timed execution of code inside :class:`~stytra.stimulation.stimuli.generic_stimuli.Stimulus` objects can be used to control hardware via I/O boards or serial communication with micro-controllers such as Arduino or MicroPython PyBoard. For example, in this way one may deliver odors or temperature stimuli or optogenetic stimulation.  Examples for a few different kinds of stimuli are provided below.


Stimuli examples
----------------

Full-field luminance
....................

.. raw:: html

        <video loop src="_static/stim_movie_full_field.mp4"
        width="200px" autoplay controls></video>

.. literalinclude:: ../../stytra/tests/record_stimuli.py
   :language: python
   :lines: 45-50

Gratings
........

.. raw:: html

        <video loop src="_static/stim_movie_grating.mp4"
        width="200px" autoplay controls></video>

.. literalinclude:: ../../stytra/tests/record_stimuli.py
   :language: python
   :lines: 70-74

OKR inducing rotating windmill stimulus
.......................................

.. raw:: html

        <video loop src="_static/stim_movie_okr.mp4"
        width="200px" autoplay controls></video>

.. literalinclude:: ../../stytra/tests/record_stimuli.py
   :language: python
   :lines: 60-64

Seamlessly-tiled image
......................

.. raw:: html

        <video loop src="_static/stim_movie_seamless_image.mp4"
        width="200px" autoplay controls></video>

.. literalinclude:: ../../stytra/tests/record_stimuli.py
   :language: python
   :lines: 80-87


Radial sine (freely-swimming fish centering stimulus)
.....................................................

.. raw:: html

        <video loop src="_static/stim_movie_radial_sine.mp4"
        width="200px" autoplay controls></video>

.. literalinclude:: ../../stytra/tests/record_stimuli.py
   :language: python
   :lines: 34-36

.. bibliography:: biblio.bib